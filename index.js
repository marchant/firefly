var FS = require("q-io/fs");
var HttpApps = require("q-io/http-apps/fs");

var appChain = require("./app-chain");

var Session = require("./session");

var SESSION_SECRET = "bdeffd49696a8b84e4456cb0740b3cea7b4f85ce";

var commandOptions = {
    "client": {
        alias: "c",
        describe: "A directory containing filament"
    },
    "app-port": {
        alias: "p",
        describe: "The port to run the app server on",
        default: 2440
    },
    "project-port": {
        alias: "P",
        describe: "The port to run the project server on",
        default: 2441
    },
    "project-dir": {
        alias: "d",
        describe: "The directory to clone and serve projects from",
        default: "../firefly-projects"
    }
};

module.exports = main;
function main(options) {
    var session = Session("session", SESSION_SECRET);

    return appChain({
        fs: options.fs || FS,
        client: options.client,
        session: session,
        clientServices: options.clientServices
    })
    .then(function (chain) {
        return chain.listen(options["app-port"])
        .then(function (server) {
            server.node.on("upgrade", function (request, socket, head) {
                chain.upgrade(request, socket, head);
            });

            console.log("Listening on http://localhost:" + options["app-port"]);
            return server;
        });
    });
}

if (require.main === module) {
    var argv = require("optimist")
        .usage("Usage: $0 --client=<directory> [--port=<port>]")
        .demand(["client"])
        .options(commandOptions).argv;

    // TODO this should be moved to main, and generated by listing the client
    // backend_plugins directory
    argv.clientServices = {
        "filament-services": "backend_plugins/filament-backend"
    };

    main(argv).done();
}
